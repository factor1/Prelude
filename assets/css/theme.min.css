/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}*{box-sizing:border-box}body,html{margin:0;padding:0;width:100%;min-height:100%;border:0}html,html a{-webkit-font-smoothing:antialiased!important;text-shadow:1px 1px 1px rgba(0,0,0,.004)}body{font:100%/1.25 arial,helvetica,sans-serif;min-height:100%}p:empty{display:none!important}table{margin:0 0 18px}img{max-width:100%;height:auto}.flex-video{position:relative;height:0;padding-top:0;padding-bottom:56.25%;margin-bottom:1rem;overflow:hidden}.flex-video embed,.flex-video iframe,.flex-video object,.flex-video video{position:absolute;top:0;left:0;width:100%;height:100%}.alignnone{margin:5px 20px 20px 0}.aligncenter,div.aligncenter{display:block;margin:5px auto}.alignright{float:right;margin:5px 0 20px 20px}.alignleft{float:left;margin:5px 20px 20px 0}a img.alignright{float:right;margin:5px 0 20px 20px}a img.alignnone{margin:5px 20px 20px 0}a img.alignleft{float:left;margin:5px 20px 20px 0}a img.aligncenter{display:block;margin-left:auto;margin-right:auto}.wp-caption{background:#fff;border:1px solid #f0f0f0;max-width:96%;padding:5px 3px 10px;text-align:center}.wp-caption.alignnone{margin:5px 20px 20px 0}.wp-caption.alignleft{margin:5px 20px 20px 0}.wp-caption.alignright{margin:5px 0 20px 20px}.wp-caption img{border:0 none;height:auto;margin:0;max-width:98.5%;padding:0;width:auto}.wp-caption p.wp-caption-text{font-size:11px;line-height:17px;margin:0;padding:0 4px 5px}.screen-reader-text{clip:rect(1px,1px,1px,1px);position:absolute!important;height:1px;width:1px;overflow:hidden}.screen-reader-text:focus{background-color:#f1f1f1;border-radius:3px;box-shadow:0 0 2px 2px rgba(0,0,0,.6);clip:auto!important;color:#21759b;display:block;font-size:14px;font-size:.875rem;font-weight:700;height:auto;left:5px;line-height:normal;padding:15px 23px 14px;text-decoration:none;top:5px;width:auto;z-index:100000}a{text-decoration:none}.menu-social ul{margin:0;padding:0;text-align:inherit;list-style:none}.menu-social ul li{display:inline-block;position:relative;padding:0 .625rem}.menu-social ul li a{display:inline-block;text-align:center}.menu-social ul li a:before{display:none;font-family:'Font Awesome 5 Brands';color:#00f}.menu-social ul li a .svg-inline--fa{font-size:1.875rem}.menu-social ul li a:hover{color:purple}.menu-social ul li a[href*="facebook.com"]::before{content:'\f09a'}.menu-social ul li a[href*="twitter.com"]::before{content:'\f099'}.menu-social ul li a[href*="dribbble.com"]::before{content:'\f17d'}.menu-social ul li a[href*="plus.google.com"]::before{content:'\f0d5'}.menu-social ul li a[href*="pinterest.com"]::before{content:'\f0d2'}.menu-social ul li a[href*="github.com"]::before{content:'\f09b'}.menu-social ul li a[href*="tumblr.com"]::before{content:'\f173'}.menu-social ul li a[href*="youtube.com"]::before{content:'\f167'}.menu-social ul li a[href*="flickr.com"]::before{content:'\f16e'}.menu-social ul li a[href*="vimeo.com"]::before{content:'\f194'}.menu-social ul li a[href*="instagram.com"]::before{content:'\f16d'}.menu-social ul li a[href*="linkedin.com"]::before{content:'\f0e1'}.menu-social ul li a[href*="yelp.com"]::before{content:'\f1e9'}.menu-social ul li a[href*="mailto:"]::before{content:'\f003'}.screen-reader-text{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
