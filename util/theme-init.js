/*
 * Prelude Init Script
 *
 * DO NOT EDIT THIS FILE IF YOU DO NOT KNOW WHAT YOU ARE DOING!
 * This file is only intended for initial setup of Prelude and does not directly
 * modify the WordPress theme at all. If you are looking for theme JavaScript
 * please look in assets/js.
 *
 */

const replace = require("replace"),
  slugify = require ("slugify"),
  prompt = require("prompt");

prompt.start();

prompt.get([ "Theme_Name", "Theme_URI", "Author", "Author_URI", "Description", "License", "License_URI", "Text_Domain" ], function (err, result) {
  let themeName = result.Theme_Name,
    themeURI = result.Theme_URI,
    author = result.Author,
    authorURI = result.Author_URI,
    description = result.Description,
    license = result.License,
    licenseURI = result.License_URI,
    textdomain = result.Text_Domain;

  if( themeName ){
    replace({
      regex: "Theme Name:",
      replacement: "Theme Name: "+themeName,
      paths: [
        "./style.css"
      ],
      silent: true,
    });

    // make it a slug for the gulpfile theme name
    const themeNameSlug = slugify(themeName, {lower: true});

    replace({
      regex: "your-theme-name",
      replacement: themeNameSlug,
      paths: [
        "./gulpfile.js"
      ],
      silent: true,
    });
  }

  if( themeURI ){
    replace({
      regex: "Theme URI:",
      replacement: "Theme URI: "+themeURI,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

  if( author ){
    replace({
      regex: "Author:",
      replacement: "Author: "+author,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

  if( authorURI ){
    replace({
      regex: "Author URI:",
      replacement: "Author URI: "+authorURI,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

  if( description ){
    replace({
      regex: "Description:",
      replacement: "Description: "+description,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

  if( license ){
    replace({
      regex: "License:",
      replacement: "License: "+license,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

  if( licenseURI ){
    replace({
      regex: "License URI:",
      replacement: "License URI: "+licenseURI,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

  if( textdomain ){
    replace({
      regex: "Text Domain:",
      replacement: "Text Domain: "+textdomain,
      paths: [
        "./style.css"
      ],
      silent: true,
    });
  }

});
